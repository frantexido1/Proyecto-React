{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultValue\", \"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"disabled\", \"error\", \"onChange\", \"required\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nimport FormControlUnstyledContext from './FormControlUnstyledContext';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport classes from './formControlUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0) && value !== '';\n}\n/**\r\n * Provides context such as filled/focused/error/required for form inputs.\r\n * Relying on the context provides high flexibility and ensures that the state always stays\r\n * consistent across the children of the `FormControl`.\r\n * This context is used by the following components:\r\n *\r\n * *   FormLabel\r\n * *   FormHelperText\r\n * *   Input\r\n * *   InputLabel\r\n *\r\n * You can find one composition example below and more going to [the demos](https://mui.com/material-ui/react-text-field/#components).\r\n *\r\n * ```jsx\r\n * <FormControl>\r\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\r\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\r\n * </FormControl>\r\n * ```\r\n *\r\n * ⚠️ Only one `Input` can be used within a FormControl because it create visual inconsistencies.\r\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\r\n *\r\n * Demos:\r\n *\r\n * - [Form control](https://mui.com/base/react-form-control/)\r\n *\r\n * API:\r\n *\r\n * - [FormControlUnstyled API](https://mui.com/base/api/form-control-unstyled/)\r\n */\n\n\nconst FormControlUnstyled = /*#__PURE__*/React.forwardRef(function FormControlUnstyled(props, ref) {\n  var _ref;\n\n  const {\n    defaultValue,\n    children,\n    className,\n    component,\n    components = {},\n    componentsProps = {},\n    disabled = false,\n    error = false,\n    onChange,\n    required = false,\n    value: incomingValue\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [value, setValue] = useControlled({\n    controlled: incomingValue,\n    default: defaultValue,\n    name: 'FormControl',\n    state: 'value'\n  });\n  const filled = hasValue(value);\n  const [focused, setFocused] = React.useState(false);\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  });\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    onChange == null ? void 0 : onChange(event);\n  };\n\n  const childContext = {\n    disabled,\n    error,\n    filled,\n    focused,\n    onBlur: () => {\n      setFocused(false);\n    },\n    onChange: handleChange,\n    onFocus: () => {\n      setFocused(true);\n    },\n    required,\n    value: value != null ? value : ''\n  };\n  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : 'div';\n  const rootProps = appendOwnerState(Root, _extends({}, other, componentsProps.root), ownerState);\n\n  const renderChildren = () => {\n    if (typeof children === 'function') {\n      return children(childContext);\n    }\n\n    return children;\n  };\n\n  return /*#__PURE__*/_jsx(FormControlUnstyledContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(Root, _extends({\n      ref: ref\n    }, rootProps, {\n      className: clsx(classes.root, className, rootProps == null ? void 0 : rootProps.className, disabled && classes.disabled, error && classes.error, filled && classes.filled, focused && classes.focused, required && classes.required),\n      children: renderChildren()\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.node, PropTypes.func]),\n\n  /**\r\n   * Class name applied to the root element.\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * The components used for each slot inside the FormControl.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\r\n   * @ignore\r\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n\n  /**\r\n   * @ignore\r\n   */\n  defaultValue: PropTypes.any,\n\n  /**\r\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\r\n   * @default false\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, the label is displayed in an error state.\r\n   * @default false\r\n   */\n  error: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * If `true`, the label will indicate that the `input` is required.\r\n   * @default false\r\n   */\n  required: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlUnstyled;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","unstable_useControlled","useControlled","FormControlUnstyledContext","appendOwnerState","classes","jsx","_jsx","hasValue","value","Array","isArray","length","FormControlUnstyled","forwardRef","props","ref","_ref","defaultValue","children","className","component","components","componentsProps","disabled","error","onChange","required","incomingValue","other","setValue","controlled","default","name","state","filled","focused","setFocused","useState","ownerState","handleChange","event","target","childContext","onBlur","onFocus","Root","rootProps","root","renderChildren","Provider","process","env","NODE_ENV","propTypes","oneOfType","node","func","string","elementType","shape","object","any","bool"],"sources":["C:/Users/GONZALO/Desktop/Proyecto-React/my-app/node_modules/@mui/base/FormControlUnstyled/FormControlUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"defaultValue\", \"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"disabled\", \"error\", \"onChange\", \"required\", \"value\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_useControlled as useControlled } from '@mui/utils';\r\nimport FormControlUnstyledContext from './FormControlUnstyledContext';\r\nimport appendOwnerState from '../utils/appendOwnerState';\r\nimport classes from './formControlUnstyledClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n\r\nfunction hasValue(value) {\r\n  return value != null && !(Array.isArray(value) && value.length === 0) && value !== '';\r\n}\r\n/**\r\n * Provides context such as filled/focused/error/required for form inputs.\r\n * Relying on the context provides high flexibility and ensures that the state always stays\r\n * consistent across the children of the `FormControl`.\r\n * This context is used by the following components:\r\n *\r\n * *   FormLabel\r\n * *   FormHelperText\r\n * *   Input\r\n * *   InputLabel\r\n *\r\n * You can find one composition example below and more going to [the demos](https://mui.com/material-ui/react-text-field/#components).\r\n *\r\n * ```jsx\r\n * <FormControl>\r\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\r\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\r\n * </FormControl>\r\n * ```\r\n *\r\n * ⚠️ Only one `Input` can be used within a FormControl because it create visual inconsistencies.\r\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\r\n *\r\n * Demos:\r\n *\r\n * - [Form control](https://mui.com/base/react-form-control/)\r\n *\r\n * API:\r\n *\r\n * - [FormControlUnstyled API](https://mui.com/base/api/form-control-unstyled/)\r\n */\r\n\r\n\r\nconst FormControlUnstyled = /*#__PURE__*/React.forwardRef(function FormControlUnstyled(props, ref) {\r\n  var _ref;\r\n\r\n  const {\r\n    defaultValue,\r\n    children,\r\n    className,\r\n    component,\r\n    components = {},\r\n    componentsProps = {},\r\n    disabled = false,\r\n    error = false,\r\n    onChange,\r\n    required = false,\r\n    value: incomingValue\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, _excluded);\r\n\r\n  const [value, setValue] = useControlled({\r\n    controlled: incomingValue,\r\n    default: defaultValue,\r\n    name: 'FormControl',\r\n    state: 'value'\r\n  });\r\n  const filled = hasValue(value);\r\n  const [focused, setFocused] = React.useState(false);\r\n\r\n  if (disabled && focused) {\r\n    setFocused(false);\r\n  }\r\n\r\n  const ownerState = _extends({}, props, {\r\n    disabled,\r\n    error,\r\n    filled,\r\n    focused,\r\n    required\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValue(event.target.value);\r\n    onChange == null ? void 0 : onChange(event);\r\n  };\r\n\r\n  const childContext = {\r\n    disabled,\r\n    error,\r\n    filled,\r\n    focused,\r\n    onBlur: () => {\r\n      setFocused(false);\r\n    },\r\n    onChange: handleChange,\r\n    onFocus: () => {\r\n      setFocused(true);\r\n    },\r\n    required,\r\n    value: value != null ? value : ''\r\n  };\r\n  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : 'div';\r\n  const rootProps = appendOwnerState(Root, _extends({}, other, componentsProps.root), ownerState);\r\n\r\n  const renderChildren = () => {\r\n    if (typeof children === 'function') {\r\n      return children(childContext);\r\n    }\r\n\r\n    return children;\r\n  };\r\n\r\n  return /*#__PURE__*/_jsx(FormControlUnstyledContext.Provider, {\r\n    value: childContext,\r\n    children: /*#__PURE__*/_jsx(Root, _extends({\r\n      ref: ref\r\n    }, rootProps, {\r\n      className: clsx(classes.root, className, rootProps == null ? void 0 : rootProps.className, disabled && classes.disabled, error && classes.error, filled && classes.filled, focused && classes.focused, required && classes.required),\r\n      children: renderChildren()\r\n    }))\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? FormControlUnstyled.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .oneOfType([PropTypes.node, PropTypes.func]),\r\n\r\n  /**\r\n   * Class name applied to the root element.\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n\r\n  /**\r\n   * The components used for each slot inside the FormControl.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  components: PropTypes.shape({\r\n    Root: PropTypes.elementType\r\n  }),\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  componentsProps: PropTypes.shape({\r\n    root: PropTypes.object\r\n  }),\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  defaultValue: PropTypes.any,\r\n\r\n  /**\r\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\r\n   * @default false\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the label is displayed in an error state.\r\n   * @default false\r\n   */\r\n  error: PropTypes.bool,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the label will indicate that the `input` is required.\r\n   * @default false\r\n   */\r\n  required: PropTypes.bool,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  value: PropTypes.any\r\n} : void 0;\r\nexport default FormControlUnstyled;"],"mappings":"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"},"metadata":{},"sourceType":"module"}